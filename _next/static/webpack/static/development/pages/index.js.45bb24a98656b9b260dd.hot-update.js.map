{"version":3,"file":"static/webpack/static/development/pages/index.js.45bb24a98656b9b260dd.hot-update.js","sources":["webpack:///./components/Player.js","webpack:///./pages/index.js"],"sourcesContent":["import { PureComponent } from 'react';\n\nexport default class Player extends PureComponent {\n  render() {\n    return (\n      <div>this is a player.</div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport localStorage from 'local-storage';\nimport { ThemeProvider } from 'mineral-ui/themes';\nimport Select from 'mineral-ui/Select';\nimport Player from '../components/Player';\nimport tilebag from '../services/tilebag';\n\nexport default class Index extends Component {\n  state = {\n    playerCount: false,\n    currentPlayer: 0,\n    tileBag: tilebag(),\n  };\n\n  possiblePlayers = [\n    {\n      text: '2',\n      value: '2',\n    },\n    {\n      text: '3',\n      value: '3',\n    },\n    {\n      text: '4',\n      value: '4',\n    },\n  ];\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n  }\n\n  handleChange = ({ value }) => {\n    const playerCount = Number(value);\n    this.setState({ playerCount });\n    localStorage('playerCount', playerCount);\n  };\n\n  hydrateStateWithLocalStorage = () => {\n    const { state } = this;\n\n    Object.keys(state).forEach((key) => {\n      const value = localStorage.get(key);\n\n      if (!value) {\n        return;\n      }\n\n      this.setState({ [key]: JSON.parse(value) });\n    });\n  };\n\n  render() {\n    const { possiblePlayers, handleChange } = this;\n    const { playerCount, currentPlayer, tileBag } = this.state;\n\n    console.log({ currentPlayer, tileBag, possiblePlayers });\n\n    return (\n      <ThemeProvider>\n        <div>\n          {!playerCount && (\n            <div>\n              <p>How many players are there?</p>\n              <Select\n                data={this.possiblePlayers}\n                onChange={handleChange}\n                placeholder=\"Choose a number\"\n                required\n              />\n            </div>\n          )}\n          <h1>Todo</h1>\n          <ul>\n            <li>Make the player grid</li>\n            <li>Make a component to hold the tiles</li>\n            <li>Make a component to hold the mats</li>\n          </ul>\n          <Player />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AALA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AASA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAvBA;AACA;AACA;;;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA5EA;AACA;;;;;A","sourceRoot":""}