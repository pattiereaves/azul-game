{"version":3,"file":"static/webpack/static/development/pages/index.js.872e42e4b8c9162193c8.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react';\nimport localStorage from 'local-storage';\nimport { ThemeProvider } from 'mineral-ui/themes';\nimport Select from 'mineral-ui/Select';\nimport Player from '../components/Player';\n\nexport default class Index extends Component {\n  state = {\n    playerCount: false,\n    currentPlayer: 0,\n  };\n\n  possiblePlayers = [\n    {\n      text: '2',\n      value: '2',\n    },\n    {\n      text: '3',\n      value: '3',\n    },\n    {\n      text: '4',\n      value: '4',\n    },\n  ];\n\n  handleChange = ({ value }) => {\n    const playerCount = Number(value);\n    this.setState({ playerCount: playerCount });\n    localStorage.set('playerCount', playerCount );\n  };\n\n  hydrateStateWithLocalStorage = () => {\n    const { state } = this;\n    debugger;\n    Object.keys(state).forEach((key) => {\n      if (! localStorage.hasOwnProperty(key)) { \n        return;\n      }\n\n       let value = localStorage.get(key);\n      // try {\n        value = JSON.parse(value);\n        this.setState({ [key]: value });\n      // } catch (e) {\n        // Handle empty string\n         // this.setState({ [key]: value });\n      // }\n\n    })\n  };\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage();\n  }\n\n  render() {\n    const { possiblePlayers, handleChange } = this;\n    const { playerCount } = this.state;\n\n    return (\n      <ThemeProvider>\n        <div>\n          {!playerCount && (\n            <div>\n              <p>How many players are there?</p>\n              <Select\n                data={this.possiblePlayers}\n                defaultSelectedItem={possiblePlayers[0]}\n                required\n                onChange={handleChange}\n              />\n            </div>\n          )}\n          <h1>Todo</h1>\n          <ul>\n            <li>Make the player grid</li>\n            <li>Make a component to hold the tiles</li>\n            <li>Make a component to hold the mats</li>\n          </ul>\n          <Player />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/EA;AACA;;;;;A","sourceRoot":""}